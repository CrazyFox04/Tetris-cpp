name: CMake Multi-Platform Build Tetris

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cxx: g++
            cc: gcc
          - os: macos-latest
            cxx: clang++
            cc: clang
          #- os: windows-latest
          #  cxx: cl
          #  cc: cl

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libboost-all-dev build-essential libgl1-mesa-dev qt6-base-dev

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install boost qt
        echo 'export PATH="/usr/local/opt/qt/bin:$PATH"' >> $GITHUB_ENV

    #- name: Install dependencies (Windows)
    #  if: matrix.os == 'windows-latest'
    #  run: |
    #    choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
    #    choco install qt6-base-dev -y
    #    choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional" -y
    #    $qtPath = Get-ChildItem 'C:\Qt\6*\msvc*\bin' | Sort-Object Name | Select-Object -Last 1
    #    echo "$qtPath" >> $GITHUB_PATH

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      run: cmake $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -DCMAKE_C_COMPILER=${{ matrix.cc }}

    - name: Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/build --config Release

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C Release

    - name: Package artifacts
      if: success()
      run: |
        cd ${{github.workspace}}/build
        zip -r tetris-${{ matrix.os }}.zip .

    - name: Publish Release
      if: success()
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{github.workspace}}/build/tetris-${{ matrix.os }}.zip
        token: ${{ secrets.GITHUB_TOKEN }}
        release_name: "Tetris"
        body: "$(date +%Y-%m-%d)"
